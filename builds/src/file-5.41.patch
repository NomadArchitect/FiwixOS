diff -ru file-5.41/config.guess file-5.41.new/config.guess
--- file-5.41/config.guess	2021-10-18 16:40:49 +0000
+++ file-5.41.new/config.guess	2021-11-01 12:03:04 +0000
@@ -1446,6 +1446,9 @@
     *:Unleashed:*:*)
 	echo "$UNAME_MACHINE"-unknown-unleashed"$UNAME_RELEASE"
 	exit ;;
+    i*86:Fiwix:*:*)
+	echo "$UNAME_MACHINE"-pc-fiwix
+	exit ;;
 esac
 
 echo "$0: unable to guess system type" >&2
diff -ru file-5.41/config.sub file-5.41.new/config.sub
--- file-5.41/config.sub	2021-10-18 16:40:49 +0000
+++ file-5.41.new/config.sub	2021-11-01 12:03:15 +0000
@@ -1365,7 +1365,7 @@
 	     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
-	     | midnightbsd* | amdhsa* | unleashed* | emscripten*)
+	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | fiwix*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
diff -ru file-5.41/src/der.c file-5.41.new/src/der.c
--- file-5.41/src/der.c	2020-06-27 23:50:44 +0000
+++ file-5.41.new/src/der.c	2021-11-01 12:04:27 +0000
@@ -236,6 +236,7 @@
 der_data(char *buf, size_t blen, uint32_t tag, const void *q, uint32_t len)
 {
 	const uint8_t *d = CAST(const uint8_t *, q);
+	uint32_t i;
 	switch (tag) {
 	case DER_TAG_PRINTABLE_STRING:
 	case DER_TAG_UTF8_STRING:
@@ -251,7 +252,7 @@
 		break;
 	}
 
-	for (uint32_t i = 0; i < len; i++) {
+	for (i = 0; i < len; i++) {
 		uint32_t z = i << 1;
 		if (z < blen - 2)
 			snprintf(buf + z, blen - z, "%.2x", d[i]);
@@ -259,7 +260,7 @@
 	return len * 2;
 }
 
-int32_t
+int
 der_offs(struct magic_set *ms, struct magic *m, size_t nbytes)
 {
 	const uint8_t *b = RCAST(const uint8_t *, ms->search.s);
diff -ru file-5.41/src/funcs.c file-5.41.new/src/funcs.c
--- file-5.41/src/funcs.c	2021-07-03 13:49:16 +0000
+++ file-5.41.new/src/funcs.c	2021-11-01 12:05:12 +0000
@@ -90,7 +90,9 @@
 protected int
 file_checkfmt(char *msg, size_t mlen, const char *fmt)
 {
-	for (const char *p = fmt; *p; p++) {
+	const char *p;
+
+	for (p = fmt; *p; p++) {
 		if (*p != '%')
 			continue;
 		if (*++p == '%')
diff -ru file-5.41/src/readelf.c file-5.41.new/src/readelf.c
--- file-5.41/src/readelf.c	2021-07-03 13:49:16 +0000
+++ file-5.41.new/src/readelf.c	2021-11-01 12:05:43 +0000
@@ -1016,6 +1016,7 @@
 	const char *tag;
 	int is_string;
 	size_t nval;
+	size_t off;
 
 	if ((*flags & (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE)) !=
 	    (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE))
@@ -1043,7 +1044,7 @@
 	*flags |= FLAGS_DID_AUXV;
 
 	nval = 0;
-	for (size_t off = 0; off + elsize <= descsz; off += elsize) {
+	for (off = 0; off + elsize <= descsz; off += elsize) {
 		memcpy(xauxv_addr, &nbuf[doff + off], xauxv_sizeof);
 		/* Limit processing to 50 vector entries to prevent DoS */
 		if (nval++ >= 50) {
