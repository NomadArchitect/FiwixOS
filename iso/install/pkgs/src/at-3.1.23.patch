diff -ruN at-3.1.23/atd.c at-3.1.23.new/atd.c
--- at-3.1.23/atd.c	2018-07-24 12:41:23 +0000
+++ at-3.1.23.new/atd.c	2023-08-04 07:16:59 +0000
@@ -66,13 +66,15 @@
 #include <unistd.h>
 #endif
 
+#ifdef HAVE_STDARG_H
+#include <stdarg.h>
+#endif
+
 #ifdef HAVE_GETOPT_H
 #include <getopt.h>
 #endif
 
-#ifdef HAVE_UNISTD_H
-#include <syslog.h>
-#endif
+#include "syslog.h"
 
 /* Local headers */
 
@@ -114,6 +116,8 @@
 
 static volatile sig_atomic_t term_signal = 0;
 
+#undef HAVE_PAM
+
 #ifdef HAVE_PAM
 #include <security/pam_appl.h>
 
@@ -133,6 +137,49 @@
 
 #endif /* HAVE_PAM */
 
+FILE *logfile;
+
+int openlog(char *ident, int option, int facility)
+{
+	char filename[1024];
+
+	memset(filename, 0, sizeof(filename));
+	sprintf(filename, "/var/log/%s", ident);
+	if(!(logfile = fopen(filename, "a"))) {
+		perror("fopen:");
+		return errno;
+	}
+	return 0;
+}
+
+int syslog(int priority, const char *format, ...)
+{
+	char *line, *buf;
+	struct timeval tv;
+
+	openlog("atd", LOG_PID, LOG_CRON);
+
+	va_list ap;
+	va_start(ap, format);
+
+	line = (char *)malloc(MAX_LINE);
+	buf = (char *)malloc(MAX_LINE);
+	gettimeofday(&tv, NULL);
+	strftime(buf, MAX_LINE, "%b %d %H:%M:%S.%%06u %Y", localtime(&tv.tv_sec));
+	snprintf(line, MAX_LINE, buf, tv.tv_usec);
+	fprintf(logfile, "%s - ", line);
+	vsnprintf(buf, MAX_LINE, format, ap);
+	fprintf(logfile, "%s\n", buf);
+
+	va_end(ap);
+	free(buf);
+	free(line);
+	fflush(logfile);
+
+	fclose(logfile);
+	return 0;
+}
+
 /* Signal handlers */
 RETSIGTYPE 
 set_term(int dummy)
@@ -494,7 +541,7 @@
 
 	PRIV_START
 
-	    nice((tolower((int) queue) - 'a' + 1) * 2);
+/*	    nice((tolower((int) queue) - 'a' + 1) * 2);*/
 
 #ifdef WITH_SELINUX
 	    if (selinux_enabled > 0) {
@@ -503,8 +550,8 @@
 	    }
 #endif
 
-	    if (initgroups(pentry->pw_name, pentry->pw_gid))
-		perr("Cannot initialize the supplementary group access list");
+/*	    if (initgroups(pentry->pw_name, pentry->pw_gid))
+		perr("Cannot initialize the supplementary group access list");*/
 
 	    if (setgid(ngid) < 0)
 		perr("Cannot change group");
@@ -571,8 +618,8 @@
 
 	PRIV_START
 
-	    if (initgroups(pentry->pw_name, pentry->pw_gid))
-		perr("Cannot initialize the supplementary group access list");
+/*	    if (initgroups(pentry->pw_name, pentry->pw_gid))
+		perr("Cannot initialize the supplementary group access list");*/
 
 	    if (setgid(gid) < 0)
 		perr("Cannot change group");
@@ -582,11 +629,13 @@
 
 	    chdir ("/");
 
+/*
 #if defined(SENDMAIL)
 	    execl(SENDMAIL, "sendmail", "-i", mailname, (char *) NULL);
 #else
 #error      "No mail command specified."
 #endif
+*/
 	    perr("Exec failed for mail command");
 
 	PRIV_END
diff -ruN at-3.1.23/config.guess at-3.1.23.new/config.guess
--- at-3.1.23/config.guess	2018-07-24 12:41:23 +0000
+++ at-3.1.23.new/config.guess	2023-08-04 07:17:26 +0000
@@ -1315,6 +1315,9 @@
     i*86:AROS:*:*)
 	echo ${UNAME_MACHINE}-pc-aros
 	exit ;;
+    i*86:Fiwix:*:*)
+	echo ${UNAME_MACHINE}-pc-fiwix
+	exit ;;
 esac
 
 #echo '(No uname command or uname output not recognized.)' 1>&2
diff -ruN at-3.1.23/config.sub at-3.1.23.new/config.sub
--- at-3.1.23/config.sub	2018-07-24 12:41:23 +0000
+++ at-3.1.23.new/config.sub	2023-08-04 07:17:26 +0000
@@ -1346,7 +1346,8 @@
 	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
 	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
-	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es*)
+	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \
+	      | -fiwix*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	-qnx*)
diff -ruN at-3.1.23/daemon.c at-3.1.23.new/daemon.c
--- at-3.1.23/daemon.c	2018-07-24 12:41:23 +0000
+++ at-3.1.23.new/daemon.c	2023-08-04 07:17:26 +0000
@@ -37,9 +37,7 @@
 #include <unistd.h>
 #endif
 
-#ifdef HAVE_SYSLOG_H
-#include <syslog.h>
-#endif
+#include "syslog.h"
 
 #ifdef HAVE_ERRNO_H
 #include <errno.h>
diff -ruN at-3.1.23/getloadavg.c at-3.1.23.new/getloadavg.c
--- at-3.1.23/getloadavg.c	2018-07-24 12:41:23 +0000
+++ at-3.1.23.new/getloadavg.c	2023-08-04 07:17:26 +0000
@@ -69,8 +69,8 @@
 #include <config.h>
 #endif
 
-#include "lisp.h"
-#include "sysfile.h" /* for encapsulated open, close, read, write */
+//#include "lisp.h"
+//#include "sysfile.h" /* for encapsulated open, close, read, write */
 
 #ifndef HAVE_GETLOADAVG
 
diff -ruN at-3.1.23/parsetime.y at-3.1.23.new/parsetime.y
--- at-3.1.23/parsetime.y	2018-07-24 12:41:23 +0000
+++ at-3.1.23.new/parsetime.y	2023-08-04 07:17:26 +0000
@@ -17,6 +17,15 @@
 extern int yylex();
 
 int add_date(int number, int period);
+
+long int timezone;
+long int daylight;
+
+int __isleap(int year)
+{
+	return (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));
+}
+
 %}
 
 %union {
diff -ruN at-3.1.23/rc at-3.1.23.new/rc
--- at-3.1.23/rc	2018-07-24 12:41:23 +0000
+++ at-3.1.23.new/rc	2023-08-04 07:17:26 +0000
@@ -1,17 +1,14 @@
-#! /bin/sh
+#!/bin/sh
+#
 ### BEGIN INIT INFO
 # Provides:          atd
 # Required-Start:    $syslog $time $remote_fs
 # Required-Stop:     $syslog $time $remote_fs
 # Default-Start:     2 3 4 5
 # Default-Stop:      0 1 6
-# Short-Description: Deferred execution scheduler
-# Description:       Debian init script for the atd deferred executions
-#                    scheduler
+# Short-Description: Starts/stop the "at" daemon
+# Description:       init script for the atd
 ### END INIT INFO
-#
-# Author:	Ryan Murray <rmurray@debian.org>
-#
 
 PATH=/bin:/usr/bin:/sbin:/usr/sbin
 DAEMON=/usr/sbin/atd
@@ -19,30 +16,34 @@
 
 test -x $DAEMON || exit 0
 
-. /lib/lsb/init-functions
-
 case "$1" in
   start)
-	log_daemon_msg "Starting deferred execution scheduler" "atd"
-	start_daemon -p $PIDFILE $DAEMON
-	log_end_msg $?
-    ;;
+	echo -n "Starting atd: "
+	$DAEMON
+	retval=$?
+	test $retval -ne 0 && echo "FAIL!"
+	test $retval -eq 0 && echo "OK"
+	;;
   stop)
-	log_daemon_msg "Stopping deferred execution scheduler" "atd"
-	killproc -p $PIDFILE $DAEMON
-	log_end_msg $?
-    ;;
-  force-reload|restart)
-    $0 stop
-    $0 start
-    ;;
+	echo -n "Stopping atd: "
+	pid=$(pidof $DAEMON)
+	kill $pid
+	retval=$?
+	test $retval -ne 0 && echo "FAIL!"
+	test $retval -eq 0 && echo "OK"
+	;;
+  restart)
+	$0 stop
+	$0 start
+	;;
   status)
-    status_of_proc -p $PIDFILE $DAEMON atd && exit 0 || exit $?
-    ;;
+	pid=$(pidof $DAEMON)
+	test $pid -gt 0 && echo "$DAEMON is running with pid $pid."
+	test -z $pid && echo "$DAEMON is stopped."
+	;;
   *)
-    echo "Usage: /etc/init.d/atd {start|stop|restart|force-reload|status}"
-    exit 1
-    ;;
+	echo "Usage: $0 {start|stop|restart|status}"
+	exit 1
+	;;
 esac
-
 exit 0
diff -ruN at-3.1.23/syslog.h at-3.1.23.new/syslog.h
--- at-3.1.23/syslog.h	1970-01-01 00:00:00 +0000
+++ at-3.1.23.new/syslog.h	2023-08-04 07:17:26 +0000
@@ -0,0 +1,19 @@
+#ifndef __SYSLOG_H
+#define __SYSLOG_H
+
+#define LOG_ERR		3	/* error conditions */
+#define LOG_WARNING	4	/* warning conditions */
+#define LOG_NOTICE	5	/* normal but significant condition */
+#define LOG_INFO	6	/* informational */
+
+#define LOG_PID		0x01	/* log the pid with each message */
+
+#define LOG_DAEMON	(3<<3)	/* system daemons */
+#define LOG_CRON	(9<<3)	/* clock daemon */
+
+#define MAX_LINE	1024
+
+int openlog(char *, int, int);
+int syslog(int, const char *, ...);
+
+#endif /* __SYSLOG_H */
