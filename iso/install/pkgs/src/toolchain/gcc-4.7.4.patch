diff -ruN gcc-4.7.4/config.guess gcc-4.7.4.new/config.guess
--- gcc-4.7.4/config.guess	2011-06-06 12:34:35.000000000 +0200
+++ gcc-4.7.4.new/config.guess	2020-01-02 14:42:38.000000000 +0100
@@ -1315,6 +1315,9 @@
     i*86:AROS:*:*)
 	echo ${UNAME_MACHINE}-pc-aros
 	exit ;;
+    i*86:Fiwix:*:*)
+	echo ${UNAME_MACHINE}-pc-fiwix
+	exit ;;
 esac
 
 #echo '(No uname command or uname output not recognized.)' 1>&2
diff -ruN gcc-4.7.4/config.sub gcc-4.7.4.new/config.sub
--- gcc-4.7.4/config.sub	2012-08-06 16:34:27.000000000 +0200
+++ gcc-4.7.4.new/config.sub	2020-01-02 14:42:38.000000000 +0100
@@ -1353,7 +1353,8 @@
 	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
 	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
-	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es*)
+	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \
+	      | -fiwix* )
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	-qnx*)
diff -ruN gcc-4.7.4/fixincludes/mkfixinc.sh gcc-4.7.4.new/fixincludes/mkfixinc.sh
--- gcc-4.7.4/fixincludes/mkfixinc.sh	2011-09-22 16:00:17.000000000 +0200
+++ gcc-4.7.4.new/fixincludes/mkfixinc.sh	2020-01-02 14:42:38.000000000 +0100
@@ -11,6 +11,7 @@
 
 # Check for special fix rules for particular targets
 case $machine in
+    *-fiwix* | \
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
diff -ruN gcc-4.7.4/gcc/config/fiwix.h gcc-4.7.4.new/gcc/config/fiwix.h
--- gcc-4.7.4/gcc/config/fiwix.h	1970-01-01 01:00:00.000000000 +0100
+++ gcc-4.7.4.new/gcc/config/fiwix.h	2022-06-19 08:54:43.000000000 +0200
@@ -0,0 +1,40 @@
+/* Target definitions for GCC for Intel 80386 running Fiwix
+ * Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2004, 2005,
+ * 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
+ * by Jordi Sanfeliu.
+ */
+
+/* Useful if you wish to make target-specific gcc changes. */
+#undef TARGET_FIWIX
+#define TARGET_FIWIX 1
+ 
+/* Default arguments you want when running your
+   i386-fiwix-gcc/x86_64-fiwix-gcc toolchain */
+#define LIB_SPEC "-lc -lg -lm -lnosys"	/* better for newlib */
+ 
+/* Files that are linked before user code.
+   The %s tells gcc to look for these files in the library directory. */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "crt0.o%s crti.o%s crtbegin.o%s"
+ 
+/* Files that are linked after user code. */
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "crtend.o%s crtn.o%s"
+ 
+/* Don't automatically add extern "C" { } around header files. */
+#undef  NO_IMPLICIT_EXTERN_C
+#define NO_IMPLICIT_EXTERN_C 1
+
+/* Additional predefined macros. */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()      \
+  do {                                \
+    builtin_define_std ("fiwix");     \
+    builtin_define_std ("unix");      \
+    builtin_define ("__fiwix__");     \
+    builtin_define ("__unix__");      \
+    builtin_assert ("system=fiwix");  \
+    builtin_assert ("system=unix");   \
+    builtin_assert ("system=posix");  \
+  } while(0);
+
diff -ruN gcc-4.7.4/gcc/config.gcc gcc-4.7.4.new/gcc/config.gcc
--- gcc-4.7.4/gcc/config.gcc	2013-10-03 02:52:23.000000000 +0200
+++ gcc-4.7.4.new/gcc/config.gcc	2020-01-02 14:42:38.000000000 +0100
@@ -772,6 +772,11 @@
   default_use_cxa_atexit=yes
   use_gcc_stdint=wrap
   ;;
+*-*-fiwix*)
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  ;;
 esac
 
 case ${target} in
@@ -2630,6 +2635,9 @@
 	c_target_objs="m32c-pragma.o"
 	cxx_target_objs="m32c-pragma.o"
  	;;
+i[3456]86-*-fiwix*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h fiwix.h"
+	;;
 *)
 	echo "*** Configuration ${target} not supported" 1>&2
 	exit 1
diff -ruN gcc-4.7.4/libcpp/lex.c gcc-4.7.4.new/libcpp/lex.c
--- gcc-4.7.4/libcpp/lex.c	2011-12-07 23:05:59.000000000 +0100
+++ gcc-4.7.4.new/libcpp/lex.c	2020-01-02 14:42:38.000000000 +0100
@@ -274,7 +274,7 @@
    extensions used, so SSE4.2 executables cannot run on machines that
    don't support that extension.  */
 
-#if (GCC_VERSION >= 4005) && (defined(__i386__) || defined(__x86_64__)) && !(defined(__sun__) && defined(__svr4__))
+#if (GCC_VERSION >= 4005) && (defined(__i386__) || defined(__x86_64__)) && !(defined(__sun__) && defined(__svr4__)) && !defined(__fiwix__)
 
 /* Replicated character data to be shared between implementations.
    Recall that outside of a context with vector support we can't
diff -ruN gcc-4.7.4/libgcc/config.host gcc-4.7.4.new/libgcc/config.host
--- gcc-4.7.4/libgcc/config.host	2014-03-20 17:13:10.000000000 +0100
+++ gcc-4.7.4.new/libgcc/config.host	2020-01-02 14:42:38.000000000 +0100
@@ -1142,6 +1142,10 @@
 	tmake_file="mep/t-mep t-fdpbit"
 	extra_parts="crtbegin.o crtend.o"
 	;;
+i[3456]86-*-fiwix*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
 *)
 	echo "*** Configuration ${host} not supported" 1>&2
 	exit 1
diff -ruN gcc-4.7.4/libstdc++-v3/configure.host gcc-4.7.4.new/libstdc++-v3/configure.host
--- gcc-4.7.4/libstdc++-v3/configure.host	2012-12-18 15:27:14.000000000 +0100
+++ gcc-4.7.4.new/libstdc++-v3/configure.host	2020-10-28 22:18:43.000000000 +0100
@@ -239,6 +239,9 @@
     os_include_dir="os/djgpp"
     error_constants_dir="os/djgpp"
     ;;
+#  fiwix*)
+#    os_include_dir="os/newlib"
+#    ;;
   freebsd*)
     os_include_dir="os/bsd/freebsd"
     ;;
diff -ruN gcc-4.7.4/libstdc++-v3/crossconfig.m4 gcc-4.7.4.new/libstdc++-v3/crossconfig.m4
--- gcc-4.7.4/libstdc++-v3/crossconfig.m4	2011-07-18 13:04:18.000000000 +0200
+++ gcc-4.7.4.new/libstdc++-v3/crossconfig.m4	2020-01-02 14:42:38.000000000 +0100
@@ -263,6 +263,12 @@
     AC_DEFINE(HAVE_TANF)
     AC_DEFINE(HAVE_TANHF)
     ;;
+  *-fiwix*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
   *)
     AC_MSG_ERROR([No support for this host/target combination.])
    ;;
